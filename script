#!/bin/bash

clear
echo -n > log.txt

# VAR
# lastest=145000
start=103000
n=100
let end=start+n

slow()
{
	for (( i=start; i<=end; i++ ))
	do
		url=https://cdn.intra.42.fr/pdf/pdf/$i/en.subject.pdf
		curl -s -f -o /dev/null -w "%{http_code}\n" --head $url >> log.txt
	done
}

# Num of threads: My pc - 50, 42 pc - 200
fast()
{
	seq $start $end | xargs -P 50 -I {} bash -c '
		url=https://cdn.intra.42.fr/pdf/pdf/{}/en.subject.pdf
		curl -s -f -o /dev/null -w "%{http_code}\n" --head $url >> log.txt
	'
}

# MAIN
# slow
fast

# INFO
set_percentage()
{
	let per=end-i
	let per=n-per
	let cur=per
	let per=per*10000
	let per=per/n
	let per=per*100
	let per=per/10000	
}
# to show percentage of progress, put this lines inside the loop:
# set_percentage
# echo -ne "Getting subject $i, $cur/$n items, $per% Done \r"
# and this in the end:
# echo -ne '\n'

# commands to check the existance of pdf on server
# CMD='curl -s -f -o /dev/null -w "%{http_code}\n" --head $url'
# check the output of the executed command
# if [ "$(CMD)" -eq 200 ]; then

# command to download the pdf, to have a custom filename use -o
# curl -O -f -s $url
# VAR=$i for the slow way, VAR={} for the fast way
# check the status code of the executed command and format the name of the pdf
# if [ $? -eq 0 ]; then
# 	NAME=$(pdftotext -l 1 en.subject.$VAR.pdf - | head -n 1)
# 	mv en.subject.$VAR.pdf en.subject.$VAR.$NAME.pdf
# 	echo "Recieved subject $VAR.$NAME" >> log.txt
# fi
